version: '3.8'

services:

  api:
    image: api
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    command: uvicorn asgilikes.asgi:app --workers 4 --host 0.0.0.0 --port 8000
    volumes:
      - ./backend:/usr/src/frodex_likes/backend
    env_file:
      - backend/.env
    container_name: api
    ports:
      - '8001:8000'
    depends_on:
      - pgdb
      - redis

  celery:
    image: api
    command: celery -A asgilikes.database.database_operations worker --loglevel=info  --logfile=logs/celery.log
    volumes:
      - ./backend:/usr/src/frodex_likes/backend
    env_file:
      - backend/.env
    depends_on:
      - api
      - redis

  redis:
    image: redis:7.2.3-alpine

  client:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./frontend:/frodex_likes
      - /frontend/node_modules
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - api

  pgdb:
    image: postgres:16-alpine
    ports:
      - '8002:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/001-first-init.sql
    env_file:
      - backend/.env

  nginx:
    restart: always
    depends_on:
      - api
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "9500:80"

volumes:
    postgres_data: